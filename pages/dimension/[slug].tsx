import { Context } from '@apollo/client'
import uniq from 'lodash/uniq'
import Head from 'next/head'
import styled from 'styled-components'

import { Header, Menu, Characters } from '../../components'
import apolloClient from '../../lib/apollo'
import { LOCATION_ROUTES_QUERY, LOCATIONS_BY_DIMENSION_QUERY, MENU_QUERY } from '../../lib/queries'
import type { Location, Character, Episode } from '../../lib/types'

const PageWidth = styled.div`
  margin: 0 auto;
  max-width: 1200px;
  padding: 0 4px;
  color: ${(p) => p.theme.colors.primary};
`

const Content = styled.div`
  display: flex;
`

export async function getStaticPaths() {
  const { data } = await apolloClient.query({
    query: LOCATION_ROUTES_QUERY,
  })
  const dimensions = uniq(data.locations.results.map((location: Location) => location.dimension))

  const paths = dimensions.map((dimension) => {
    return {
      params: {
        slug: dimension,
      },
    }
  })
  return {
    paths,
    fallback: false,
  }
}

export async function getStaticProps({ params }: Context) {
  const { slug } = params

  const { data: MenuData } = await apolloClient.query({
    query: MENU_QUERY,
  })

  const { data } = await apolloClient.query({
    query: LOCATIONS_BY_DIMENSION_QUERY,
    variables: { dimensionName: decodeURIComponent(slug) },
  })

  const residents = data.locations.results.reduce(
    (acc: Character[], location: Location) => [...acc, ...location.residents],
    [],
  )

  const { episodes, locations } = MenuData

  return {
    props: {
      episodes: episodes.results,
      characters: uniq(residents),
      locations: locations.results,
    },
  }
}

type Props = {
  characters: Character[]
  episodes: Episode[]
  locations: Location[]
}

function CharactersByDimension(props: Props) {
  const { episodes, locations, characters } = props

  return (
    <>
      <Head>
        <title>Rick and Morty App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageWidth>
        <Header>Rick and Morty API - Dimension</Header>
        <Content>
          <Menu episodes={episodes} locations={locations} characters={characters} />
          <Characters characters={characters} />
        </Content>
      </PageWidth>
    </>
  )
}

export default CharactersByDimension
